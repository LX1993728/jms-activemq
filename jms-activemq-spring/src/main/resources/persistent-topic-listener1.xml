<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd ">

    <!--第三方工厂-->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://192.168.1.110:61616"/>
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
        <property name="useAsyncSend" value="true"/>
    </bean>

    <!-- ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory
        可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗,要依赖于 activemq-pool包 -->
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="targetConnectionFactory" />
        <property name="maxConnections" value="100" />
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory">
        <!--消费者标识ID-->
        <property name="clientId" value="clientId_001" />
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory" />
    </bean>

    <!-- topic目的地配置 -->
    <bean id="destinationTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg index="0" value="spring-persistent-topic" />
    </bean>

    <!--消息消费者监听类-->
    <bean id="myMessageListener" class="com.liuxun.jms.persistentTopic.PersistentTopicListener1"/>
    <!--监听器的配置-->
    <bean id="myListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <!--消息目的地-->
        <property name="destination" ref="destinationTopic" />
        <!--消息监听类-->
        <property name="messageListener" ref="myMessageListener" />
        <!--发布订阅模式-->
        <property name="pubSubDomain" value="true" />
        <!--消息持久化值设置为true-->
        <property name="subscriptionDurable" value="true" />
        <!-- 接收者ID -->
        <property name="clientId" value="clientId_001" />
        <property name="durableSubscriptionName" value="clientId_001" />
    </bean>


</beans>